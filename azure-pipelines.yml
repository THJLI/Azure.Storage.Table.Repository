# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  deployDate: ''

pool:
  vmImage: windows-latest

jobs:
- job: Pack
  displayName: Pack Project
  continueOnError: false
  workspace:
    clean: outputs
  steps:
  - powershell: |
      $dateStr = (Get-Date).ToString('yyyyMMdd') 
      Write-Host "##vso[task.setvariable variable=deployDate;]$dateStr"
      dotnet pack Azure.Storage.Table.Repository/Azure.Storage.Table.Repository.csproj -o $(Build.ArtifactStagingDirectory)/pack --configuration Release --version-suffix $dateStr
  # - task: DotNetCoreCLI@2
  #   inputs:
  #     command: 'restore'
  #     projects: '**/Azure.Storage.Table.Repository.csproj'
  #     feedsToUse: 'select'
  # - task: DotNetCoreCLI@2
  #   inputs:
  #     command: 'pack'
  #     packagesToPack: '**/Azure.Storage.Table.Repository.csproj'
  #     versioningScheme: 'off'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/pack/*.nupkg'
      ArtifactName: 'pack'
      publishLocation: 'Container'

- job: 'PushGit'
  displayName: Push Git
  dependsOn: Pack
  continueOnError: false 
  steps:
  - task: DownloadBuildArtifacts@1
    inputs:
      buildType: 'current'
      downloadType: 'specific'
      itemPattern: '**/*.nupkg'
      downloadPath: '$(System.ArtifactsDirectory)'
  - script: |
      dotnet nuget push "$(System.ArtifactsDirectory)/**/*.nupkg"  --source "$(Source)" --api-key $(ApiKey)
    displayName: 'Push git Package'